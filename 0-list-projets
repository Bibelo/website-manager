#!/bin/bash

 #set -x

usage() {
        PROGNAME=$0
        cat <<- EOF

	$PROGNAME dev|prod

	EOF
                exit 1
}

init(){
	GREEN='\033[0;32m'
	RED='\033[0;31m'
	CYAN='\033[0;36m'
	NC='\033[0m' # No Color

	. ./config.ini
}

clearmsg(){
        msg=$1
        printf "${CYAN}${msg}${NC}\n"
}

generaldb_credential(){
    unset login
    prompt="Enter generaldb_mariadb ADMIN username: "
    read -p "$prompt" username
    
    unset password
    prompt="Enter generaldb_mariadb ADMIN password: "
    while IFS= read -p "$prompt" -r -s -n 1 char
    do
        if [[ $char == $'\0' ]]
        then
            break
        fi
        prompt='*'
        password+="$char"
    done
    echo
}

generaldb_credentials_file(){
	mode=$1
        unset username
        unset password
        if [[ ! -f .${mode}_generaldb_creds ]]; then
                echo "Credentials file cannot be found (.generaldb_creds)"
                exit 1
        fi

        . ./.${mode}_generaldb_creds

        username=${mode}_username
        username=${!username}
        password=${mode}_password
        password=${!password}

        if [[ -z $username ]] || [[ -z password ]]; then
                echo "Credentials are empty (in .generaldb_creds)"
                exit 1
        fi
}

show_dbs(){
	mode=$1
	generaldb_container_name=${mode}_generaldb_container_name
	generaldb_container_name=${!generaldb_container_name}

	command="show databases;"
	docker exec -it $generaldb_container_name mysql -u "$username" -p$password -e"$command"
}

show_db_users(){
	mode=$1
	generaldb_container_name=${mode}_generaldb_container_name
	generaldb_container_name=${!generaldb_container_name}

	command="SELECT User FROM mysql.user;"

	docker exec -it $generaldb_container_name mysql -u "$username" -p$password -e"$command"
}

main(){
	init

#        mode=$1
#        generaldb_container_name=${mode}_generaldb_container_name
#        generaldb_container_name=${!generaldb_container_name}


	clearmsg "Content of /var/www"
	ls -1A /var/www
	echo

	clearmsg "Content of /projects"
	ls -1A /projects
	echo

	generaldb_credentials_file dev

	clearmsg "Databases in dev DB container"
	show_dbs dev
	echo

	clearmsg "Users in dev DB container"
	show_db_users dev
	echo

	generaldb_credentials_file prod

	clearmsg "Databases in prod DB container"
	show_dbs prod
	echo

	clearmsg "Users in prod DB container"
	show_db_users prod
	echo

	clearmsg "Running containers"
	docker ps --format='{{.Names}}'
	echo

	clearmsg "Stopped containers"
	diff  --unchanged-group-format="" --new-group-format="%>"  <(docker ps --format='{{.Names}}') <(docker ps -a --format='{{.Names}}')
	echo
	
	clearmsg "Content of Reverse Proxy path"
	ls -1Atr $reverse_proxy_defpath

}

if [[ $# -ne 0 ]]
        then
                init
                usage
fi

main $@

