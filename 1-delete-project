#!/bin/bash

# set -x

init(){
	. ./config.ini
}

generaldb_credential(){
    unset login
    prompt="Enter generaldb_mariadb ADMIN username: "
    read -p "$prompt" username
    
    unset password
    prompt="Enter generaldb_mariadb ADMIN password: "
    while IFS= read -p "$prompt" -r -s -n 1 char
    do
        if [[ $char == $'\0' ]]
        then
            break
        fi
        prompt='*'
        password+="$char"
    done
    echo
}

generaldb_credentials_file(){
        unset username
        unset password
        if [[ ! -f .generaldb_creds ]]; then
                echo "Credentials file cannot be found (.generaldb_creds)"
                exit 1
        fi

        . ./.generaldb_creds

        if [[ -z $username ]] || [[ -z password ]]; then
                echo "Credentials are empty (in .generaldb_creds)"
                exit 1
        fi
}

show_dbs(){
	echo "Showing Databases"
	command="show databases;"
	docker exec -it $generaldb_container_name mysql -u "$username" -p$password -e"$command"
	echo
}

delete_db_user(){
	command="REVOKE ALL PRIVILEGES, GRANT OPTION FROM \"$username_to_delete\";  DROP USER \"$username_to_delete\";"

	docker exec -it $generaldb_container_name mysql -u "$username" -p$password -e"$command"
}
delete_dbs(){
	command="DROP DATABASE \`$project_to_delete\`;"

	docker exec -it $generaldb_container_name mysql -u "$username" -p$password -e"$command"
}

delete_files(){
	if [[ -z $project_to_delete ]]; then
		"Variable \$project_to_delete is empty, cannot continue"
	fi
	rm -r /projects/$project_to_delete/*
	rmdir /projects/$project_to_delete/

	echo "About to remove /var/www/$project_to_delete/"
	rm -r /var/www/$project_to_delete/*
	rmdir /var/www/$project_to_delete/
}

show_db_users(){
	echo "Showing Users"
	command="SELECT User FROM mysql.user;"

	docker exec -it $generaldb_container_name mysql -u "$username" -p$password -e"$command"
	echo
}

main(){
	init
#	generaldb_credential
	generaldb_credentials_file

	execution

	while true; do
		echo
		prompt="Other things to delete? (yes/no) "
		read -p "$prompt" answer
		if [[ $answer =~ ^(yes|y|YES|Y)$ ]]; then
			execution
		else
			break
		fi
	done
}

execution(){
	echo
	show_dbs

	echo "Content of /var/www"
	ls -1A /var/www
	echo

	echo "Content of /projects"
	ls -1A /projects
	echo

	prompt="Enter name of project to delete: "
	read -p "$prompt" project_to_delete
	if [[ -z $project_to_delete ]]; then
		echo "Project name cannot be empty"
		exit 1
	fi

	show_db_users
	prompt="Enter username to delete: "
	read -p "$prompt" username_to_delete

	delete_db_user
	show_db_users

	delete_dbs
	show_dbs

	docker stop $project_to_delete
	docker rm $project_to_delete

	delete_files
}

main $@

